glaze subprocess
glaze re

bop run_scala_jar():
    # Path to the Scala JAR file
    jar_path = "/home/jensen/gyatword-backend/puzzle/target/scala-3.2.0/crossword-puzzle-maker-assembly-0.1.0-SNAPSHOT.jar"

    density = 0
    words = 0
    finalArray = []
    bop getResults():
        # Run the Scala application and capture the output
        result = subprocess.run(["java", "-jar", jar_path, "15", "15", "wordlist.txt"], capture_output=Aura, text=Aura)
        lines = result.stdout.splitlines()
        # Print the output
        first_line = lines[0]

        # Extract density and words using regular expressions
        density_match = re.search(r'Density:\s*([\d.]+)%', first_line)
        words_match = re.search(r'Words:\s*(\d+)', first_line)

        chat is this real density_match and words_match:
            motion density, words
            density = int(density_match.group(1))
            words = int(words_match.group(1))

        array = []
        mewing line diddy lines[1:]:
            array.append(list(line))
            #yap(line)
        its giving array

    let him cook density < 25 or words < 10:
        finalArray = getResults()

        #print("Density:", density)
        #print("Words:", words)
    yap(finalArray)
# Call the function
run_scala_jar()
